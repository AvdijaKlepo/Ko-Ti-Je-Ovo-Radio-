// <auto-generated />
using System;
using KoRadio.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoRadio.Services.Migrations
{
    [DbContext(typeof(KoTiJeOvoRadioContext))]
    partial class KoTiJeOvoRadioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyAdministrator", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CompanyId", "UserId")
                        .HasName("PK__CompanyA__FCEF90863465B45C");

                    b.HasIndex("UserId");

                    b.ToTable("CompanyAdministrator", (string)null);
                });

            modelBuilder.Entity("KoRadio.Services.Database.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CompanyId")
                        .HasName("PK__Companie__2D971C4C6BA2CBCD");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("KoRadio.Services.Database.CompanyWorker", b =>
                {
                    b.Property<int>("CompanyWorkersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyWorkersID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyWorkersId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("WorkerID");

                    b.HasKey("CompanyWorkersId")
                        .HasName("PK__CompanyW__F593AA8FEFAFED44");

                    b.HasIndex("CompanyId");

                    b.HasIndex("WorkerId");

                    b.ToTable("CompanyWorkers");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Conflict", b =>
                {
                    b.Property<int>("ConflictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ConflictID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConflictId"));

                    b.Property<string>("ConflictReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    b.HasKey("ConflictId")
                        .HasName("PK__Conflict__FEE84A165B8815CC");

                    b.HasIndex("JobId");

                    b.ToTable("Conflicts");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Estimate", b =>
                {
                    b.Property<int>("EstimateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EstimateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstimateId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("FreelancerId")
                        .HasColumnType("int")
                        .HasColumnName("FreelancerID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("EstimateId")
                        .HasName("PK__Estimate__ABEBF4D51AFFC293");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FreelancerId");

                    b.HasIndex("UserId");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Freelancer", b =>
                {
                    b.Property<int>("WorkerId")
                        .HasColumnType("int")
                        .HasColumnName("WorkerID");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("WorkerId")
                        .HasName("PK__Freelanc__077C880650C2883E");

                    b.ToTable("Freelancers");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int>("FreelancerId")
                        .HasColumnType("int")
                        .HasColumnName("FreelancerID");

                    b.Property<DateTime?>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAD5FDAAEED1");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FreelancerId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EstimateId")
                        .HasColumnType("int")
                        .HasColumnName("EstimateID");

                    b.Property<int?>("FreelancerId")
                        .HasColumnType("int")
                        .HasColumnName("FreelancerID");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("StatusID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("JobId")
                        .HasName("PK__Jobs__056690E258E4BCA7");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EstimateId");

                    b.HasIndex("FreelancerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("KoRadio.Services.Database.JobAvailability", b =>
                {
                    b.Property<int>("JobAvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobAvailabilityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobAvailabilityId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("FreelancerId")
                        .HasColumnType("int")
                        .HasColumnName("FreelancerID");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("JobAvailabilityId")
                        .HasName("PK__JobAvail__0E1EFD63B843CAE1");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FreelancerId");

                    b.ToTable("JobAvailability", (string)null);
                });

            modelBuilder.Entity("KoRadio.Services.Database.JobStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__JobStatu__C8EE2043DA05F66B");

                    b.HasIndex(new[] { "StatusName" }, "UQ__JobStatu__05E7698ADA5572F0")
                        .IsUnique();

                    b.ToTable("JobStatuses");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A92DD3D4B");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61606615CF66")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int?>("FreelancerId")
                        .HasColumnType("int")
                        .HasColumnName("FreelancerID");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Services__C51BB0EAD9D99D16");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FreelancerId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("KoRadio.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACDE55EC71");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KoRadio.Services.Database.UserRole", b =>
                {
                    b.Property<int>("UserRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRolesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRolesId"));

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserRolesId")
                        .HasName("PK__UserRole__43D8C0CDAC829069");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<decimal?>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("WorkerId")
                        .HasName("PK__Workers__077C8806A96A869A");

                    b.HasIndex(new[] { "UserId" }, "UQ__Workers__1788CCAD93F5CE3F")
                        .IsUnique();

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("CompanyAdministrator", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CompanyAd__Compa__5BE2A6F2");

                    b.HasOne("KoRadio.Services.Database.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CompanyAd__UserI__5CD6CB2B");
                });

            modelBuilder.Entity("KoRadio.Services.Database.CompanyWorker", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", "Company")
                        .WithMany("CompanyWorkers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CompanyWo__Compa__59063A47");

                    b.HasOne("KoRadio.Services.Database.Worker", "Worker")
                        .WithMany("CompanyWorkers")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CompanyWo__Worke__5812160E");

                    b.Navigation("Company");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Conflict", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Job", "Job")
                        .WithMany("Conflicts")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Conflicts__JobID__2FCF1A8A");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Estimate", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", "Company")
                        .WithMany("Estimates")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Estimates__Compa__6EF57B66");

                    b.HasOne("KoRadio.Services.Database.Freelancer", "Freelancer")
                        .WithMany("Estimates")
                        .HasForeignKey("FreelancerId")
                        .IsRequired()
                        .HasConstraintName("FK__Estimates__Freel__6E01572D");

                    b.HasOne("KoRadio.Services.Database.User", "User")
                        .WithMany("Estimates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Estimates__UserI__6D0D32F4");

                    b.Navigation("Company");

                    b.Navigation("Freelancer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Freelancer", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Worker", "Worker")
                        .WithOne("Freelancer")
                        .HasForeignKey("KoRadio.Services.Database.Freelancer", "WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Freelance__Worke__4AB81AF0");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Invoice", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", "Company")
                        .WithMany("Invoices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Invoices__Compan__02084FDA");

                    b.HasOne("KoRadio.Services.Database.Freelancer", "Freelancer")
                        .WithMany("Invoices")
                        .HasForeignKey("FreelancerId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__Freela__01142BA1");

                    b.HasOne("KoRadio.Services.Database.JobStatus", "Status")
                        .WithMany("Invoices")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__Status__7F2BE32F");

                    b.HasOne("KoRadio.Services.Database.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__UserID__00200768");

                    b.Navigation("Company");

                    b.Navigation("Freelancer");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Job", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__Jobs__CompanyID__2BFE89A6");

                    b.HasOne("KoRadio.Services.Database.Estimate", "Estimate")
                        .WithMany("Jobs")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Jobs__EstimateID__2739D489");

                    b.HasOne("KoRadio.Services.Database.Freelancer", "Freelancer")
                        .WithMany("Jobs")
                        .HasForeignKey("FreelancerId")
                        .HasConstraintName("FK__Jobs__Freelancer__2B0A656D");

                    b.HasOne("KoRadio.Services.Database.Invoice", "Invoice")
                        .WithMany("Jobs")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__Jobs__InvoiceID__29221CFB");

                    b.HasOne("KoRadio.Services.Database.JobStatus", "Status")
                        .WithMany("Jobs")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Jobs__StatusID__282DF8C2");

                    b.HasOne("KoRadio.Services.Database.User", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Jobs__UserID__2A164134");

                    b.Navigation("Company");

                    b.Navigation("Estimate");

                    b.Navigation("Freelancer");

                    b.Navigation("Invoice");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoRadio.Services.Database.JobAvailability", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", "Company")
                        .WithMany("JobAvailabilities")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__JobAvaila__Compa__52593CB8");

                    b.HasOne("KoRadio.Services.Database.Freelancer", "Freelancer")
                        .WithMany("JobAvailabilities")
                        .HasForeignKey("FreelancerId")
                        .HasConstraintName("FK__JobAvaila__Freel__5165187F");

                    b.Navigation("Company");

                    b.Navigation("Freelancer");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Service", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Company", "Company")
                        .WithMany("Services")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__Services__Compan__4E88ABD4");

                    b.HasOne("KoRadio.Services.Database.Freelancer", "Freelancer")
                        .WithMany("Services")
                        .HasForeignKey("FreelancerId")
                        .HasConstraintName("FK__Services__Freela__4D94879B");

                    b.Navigation("Company");

                    b.Navigation("Freelancer");
                });

            modelBuilder.Entity("KoRadio.Services.Database.UserRole", b =>
                {
                    b.HasOne("KoRadio.Services.Database.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRoles__RoleI__3E52440B");

                    b.HasOne("KoRadio.Services.Database.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRoles__UserI__3D5E1FD2");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Worker", b =>
                {
                    b.HasOne("KoRadio.Services.Database.User", "User")
                        .WithOne("Worker")
                        .HasForeignKey("KoRadio.Services.Database.Worker", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Workers__UserID__45F365D3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Company", b =>
                {
                    b.Navigation("CompanyWorkers");

                    b.Navigation("Estimates");

                    b.Navigation("Invoices");

                    b.Navigation("JobAvailabilities");

                    b.Navigation("Jobs");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Estimate", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Freelancer", b =>
                {
                    b.Navigation("Estimates");

                    b.Navigation("Invoices");

                    b.Navigation("JobAvailabilities");

                    b.Navigation("Jobs");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Invoice", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Job", b =>
                {
                    b.Navigation("Conflicts");
                });

            modelBuilder.Entity("KoRadio.Services.Database.JobStatus", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("KoRadio.Services.Database.User", b =>
                {
                    b.Navigation("Estimates");

                    b.Navigation("Invoices");

                    b.Navigation("Jobs");

                    b.Navigation("UserRoles");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("KoRadio.Services.Database.Worker", b =>
                {
                    b.Navigation("CompanyWorkers");

                    b.Navigation("Freelancer");
                });
#pragma warning restore 612, 618
        }
    }
}
